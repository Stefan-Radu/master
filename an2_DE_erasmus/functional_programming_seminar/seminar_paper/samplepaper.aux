\relax 
\providecommand\hyper@newdestlabel[2]{}
\providecommand\HyperFirstAtBeginDocument{\AtBeginDocument}
\HyperFirstAtBeginDocument{\ifx\hyper@anchor\@undefined
\global\let\oldnewlabel\newlabel
\gdef\newlabel#1#2{\newlabelxx{#1}#2}
\gdef\newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\ifx\hyper@anchor\@undefined
\let\newlabel\oldnewlabel
\fi}
\fi}
\global\let\hyper@last\relax 
\gdef\HyperFirstAtBeginDocument#1{#1}
\providecommand\HyField@AuxAddToFields[1]{}
\providecommand\HyField@AuxAddToCoFields[2]{}
\citation{formalver}
\citation{hitchhiker}
\@writefile{toc}{\contentsline {title}{Formal Verification with Lean}{1}{chapter.1}\protected@file@percent }
\@writefile{toc}{\authcount {1}}
\@writefile{toc}{\contentsline {author}{Stefan-Octavian Radu}{1}{chapter.1}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {1}Introduction}{1}{section.1.1}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {2}Formal Verification}{1}{section.1.2}\protected@file@percent }
\citation{hoare}
\citation{floyd}
\citation{hitchhiker}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1}Operational Semantics}{2}{subsection.1.2.1}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2}Axiomatic Semantics (Floyd-Hoare Logic)}{2}{subsection.1.2.2}\protected@file@percent }
\citation{hitchhiker}
\citation{theorem_proving_in_lean4}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.3}Denotational Semantics}{3}{subsection.1.2.3}\protected@file@percent }
\citation{theorem_proving_in_lean4}
\citation{func_prog_in_lean}
\citation{func_prog_in_lean}
\citation{haskell}
\citation{ocaml}
\citation{func_prog_in_lean}
\@writefile{toc}{\contentsline {section}{\numberline {3}The Lean programming language}{4}{section.1.3}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {3.1}Functional Programming in Lean}{4}{subsection.1.3.1}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{Simple Definitions and Functions.}{4}{section*.2}\protected@file@percent }
\newlabel{lst:defs}{{1.1}{4}{Examples of simple definitions and function definitions in Lean}{lstlisting.1.1}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {1.1}Examples of simple definitions and function definitions in Lean}{4}{lstlisting.1.1}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{Defining new types.}{5}{section*.3}\protected@file@percent }
\newlabel{lst:bool}{{1.2}{5}{The Bool type has two constructors without parameters: one for \lstinline {true} and one for \lstinline {false}}{lstlisting.1.2}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {1.2}The Bool type has two constructors without parameters: one for \lstinline {true} and one for \lstinline {false}}{5}{lstlisting.1.2}\protected@file@percent }
\newlabel{lst:nat}{{1.3}{5}{Recursive definition of natural numbers}{lstlisting.1.3}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {1.3}Recursive definition of natural numbers}{5}{lstlisting.1.3}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{Recursion and pattern matching.}{5}{section*.4}\protected@file@percent }
\newlabel{lst:fact}{{1.4}{5}{Using recursion and pattern matching in Lean}{lstlisting.1.4}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {1.4}Using recursion and pattern matching in Lean}{5}{lstlisting.1.4}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{Lists and higher-order functions.}{5}{section*.5}\protected@file@percent }
\citation{theorem_proving_in_lean4}
\newlabel{lst:fold}{{1.5}{6}{An example of using lists and higher-order functions in Lean. Usage of lambda abstractions and syntactic sugar can be observed}{lstlisting.1.5}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {1.5}An example of using lists and higher-order functions in Lean. Usage of lambda abstractions and syntactic sugar can be observed.}{6}{lstlisting.1.5}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{Other features of Lean.}{6}{section*.6}\protected@file@percent }
\newlabel{lst:hello}{{1.6}{6}{Hello World example in Lean}{lstlisting.1.6}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {1.6}Hello World example in Lean}{6}{lstlisting.1.6}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2}Dependent Types}{6}{subsection.1.3.2}\protected@file@percent }
\newlabel{sec:dt}{{3.2}{6}{Dependent Types}{subsection.1.3.2}{}}
\citation{girard}
\citation{russell}
\citation{systemu}
\citation{altenkirch2005dependent}
\newlabel{lst:types}{{1.7}{7}{Types are first class objects in Lean}{lstlisting.1.7}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {1.7}Types are first class objects in Lean}{7}{lstlisting.1.7}\protected@file@percent }
\newlabel{lst:vect}{{1.8}{7}{Defining a fixed-size list type and defining a function which produces a fixed-size list based on input parameters}{lstlisting.1.8}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {1.8}Defining a fixed-size list type and defining a function which produces a fixed-size list based on input parameters}{7}{lstlisting.1.8}\protected@file@percent }
\citation{theorem_proving_in_lean4}
\citation{theorem_proving_in_lean4}
\citation{natural}
\citation{natural}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.3}Tactic Mode}{8}{subsection.1.3.3}\protected@file@percent }
\newlabel{lst:or_elim}{{1.9}{8}{A proof example for a theorem expressed in propositional logic. We use the Or.elim theorem and the Or.inl and Or.inr constructurs for a logical Or expression, which are built into the standard Lean library. See \ref {lst:defs} for the definitions of these constructs}{lstlisting.1.9}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {1.9}A proof example for a theorem expressed in propositional logic. We use the Or.elim theorem and the Or.inl and Or.inr constructurs for a logical Or expression, which are built into the standard Lean library. See \ref {lst:defs} for the definitions of these constructs.}{8}{lstlisting.1.9}\protected@file@percent }
\newlabel{lst:or_elim_tactic}{{1.10}{8}{An equivalent implementation to \ref {lst:or_elim} can be given using tactics}{lstlisting.1.10}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {1.10}An equivalent implementation to \ref {lst:or_elim} can be given using tactics.}{8}{lstlisting.1.10}\protected@file@percent }
\@writefile{lol}{\contentsline {lstlisting}{\numberline {1.11}Useful definitions to better understand examples \ref {lst:or_elim} and \ref {lst:or_elim_tactic}.}{8}{lstlisting.1.11}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{intro.}{8}{section*.7}\protected@file@percent }
\citation{natural}
\citation{natural}
\citation{natural}
\citation{natural}
\citation{natural}
\citation{hitchhiker}
\@writefile{toc}{\contentsline {subsubsection}{exact.}{9}{section*.8}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{apply.}{9}{section*.9}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{cases.}{9}{section*.10}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{rfl.}{9}{section*.11}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{rw.}{9}{section*.12}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{simp.}{9}{section*.13}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{induction.}{9}{section*.14}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {4}A practical example}{9}{section.1.4}\protected@file@percent }
\newlabel{sec:bf}{{4}{9}{A practical example}{section.1.4}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.1}Brainf*ck}{9}{subsection.1.4.1}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{State.}{10}{section*.15}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{State operations.}{10}{section*.16}\protected@file@percent }
\newlabel{lst:state_change}{{1.12}{10}{Implementations for functions which modify the state after pointer increase (\cc {>}), value increase (\cc {+}) and input (\cc {,}) operations}{lstlisting.1.12}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {1.12}Implementations for functions which modify the state after pointer increase (\lstinline [mathescape]{>}), value increase (\lstinline [mathescape]{+}) and input (\lstinline [mathescape]{,}) operations.}{10}{lstlisting.1.12}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{Syntax.}{10}{section*.17}\protected@file@percent }
\newlabel{lst:op}{{1.13}{11}{Syntax of the language implemented in Lean}{lstlisting.1.13}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {1.13}Syntax of the language implemented in Lean.}{11}{lstlisting.1.13}\protected@file@percent }
\newlabel{lst:program}{{1.14}{11}{Defining programs using the Op syntax}{lstlisting.1.14}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {1.14}Defining programs using the Op syntax}{11}{lstlisting.1.14}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {4.2}Big-step semantics}{11}{subsection.1.4.2}\protected@file@percent }
\newlabel{lst:bigstep}{{1.15}{12}{Implementation of big-step semantics for the Brainf*uck programming language}{lstlisting.1.15}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {1.15}Implementation of big-step semantics for the Brainf*uck programming language}{12}{lstlisting.1.15}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {4.3}Proving Theorems}{12}{subsection.1.4.3}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{Zeroing a cell}{12}{section*.18}\protected@file@percent }
\newlabel{lst:thdec}{{1.16}{12}{Proof by induction in Lean, that \cc {[-]} reduces a cell to 0}{lstlisting.1.16}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {1.16}Proof by induction in Lean, that \lstinline [mathescape]{[-]} reduces a cell to 0}{12}{lstlisting.1.16}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{Adding two input numbers together.}{13}{section*.19}\protected@file@percent }
\newlabel{lst:sum}{{1.17}{13}{Proof in Lean that the algorithm \cc {,>,<[->+<]} takes to numbers from the input and computes their sum}{lstlisting.1.17}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {1.17}Proof in Lean that the algorithm \lstinline [mathescape]{,>,<[->+<]} takes to numbers from the input and computes their sum.}{13}{lstlisting.1.17}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{Swapping two values.}{14}{section*.20}\protected@file@percent }
\newlabel{lst:swap}{{1.18}{14}{Proof that the program \cc {>[<+>-]>[<+>-]<<[>>+<<-]} successfully swaps two consecutive memory cells}{lstlisting.1.18}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {1.18}Proof that the program \lstinline [mathescape]{>[<+>-]>[<+>-]<<[>>+<<-]} successfully swaps two consecutive memory cells}{14}{lstlisting.1.18}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {5}Conclusions}{15}{section.1.5}\protected@file@percent }
\bibstyle{splncs04}
\bibdata{sample.bib}
\bibcite{haskell}{1}
\bibcite{ocaml}{2}
\bibcite{natural}{3}
\bibcite{bf}{4}
\bibcite{altenkirch2005dependent}{5}
\bibcite{theorem_proving_in_lean4}{6}
\bibcite{hitchhiker}{7}
\bibcite{func_prog_in_lean}{8}
\bibcite{systemu}{9}
\bibcite{girard}{10}
\bibcite{floyd}{11}
\bibcite{hoare}{12}
\bibcite{russell}{13}
\bibcite{formalver}{14}
\citation{bf}
\@writefile{toc}{\contentsline {section}{\numberline {A}Brainf*ck syntax}{17}{section.A.1}\protected@file@percent }
\newlabel{ap:syntax}{{A}{17}{Brainf*ck syntax}{section.A.1}{}}
\@writefile{toc}{\contentsline {section}{\numberline {B}Syntax Notation}{17}{section.A.2}\protected@file@percent }
\newlabel{ap:notations}{{B}{17}{Syntax Notation}{section.A.2}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {1.19}Notations used for the defined operations. The goal of this is to simplify program declaration}{17}{lstlisting.A.19}\protected@file@percent }
\gdef \@abspage@last{17}
