\addvspace {10\p@ }
\addvspace {10\p@ }
\setforeignlanguage {english}
\contentsline {figure}{\numberline {2.1}{\ignorespaces An infamous screenshot of the ransom pop-up which would show up on a system infected by the WannaCry worm \blx@tocontentsinit {0}\cite {wiki_wannacry}.}}{8}{figure.2.1}%
\setforeignlanguage {english}
\contentsline {figure}{\numberline {2.2}{\ignorespaces Visual representation of the path tree resulting from symbolically executing the code in Listing \ref {lst:fizzbuzz}. Each node in the tree represents a conditional. Each edge has a weight associated with the constraint on argument $c$, which would result in taking the respective branch. Blue rectangles show the output for the associated execution path.}}{15}{figure.2.2}%
\addvspace {10\p@ }
\addvspace {10\p@ }
\setforeignlanguage {english}
\contentsline {figure}{\numberline {4.1}{\ignorespaces \gls {CFG} of the \lstinline [mathescape]{vmwhere} \gls {VM} interpretor. The major components, such as the instruction fetcher, the dispatcher, \gls {VM} handers, as well as the \gls {VM} exit are clearly labelled. The image is generated with the help of the Cutter \gls {RE} tool \blx@tocontentsinit {0}\cite {cutter}.}}{22}{figure.4.1}%
\setforeignlanguage {english}
\contentsline {figure}{\numberline {4.2}{\ignorespaces TODO}}{28}{figure.4.2}%
\setforeignlanguage {english}
\contentsline {figure}{\numberline {4.3}{\ignorespaces TODO}}{35}{figure.4.3}%
\addvspace {10\p@ }
