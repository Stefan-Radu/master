run < payl
si
run < payl
ni
si
asmsearch "pop rdx;"
asmsearch "pop rdx;" libc
ropsearch "pop rdx;"
ropsearch "pop rdx;" libc
ropsearch "pop rdx; ret" libc
ropsearch "pop rdx; ret;" libc
ropsearch "pop rdx" libc
run < payl
ni
ni
ni
si
x/30x $rsp
x/30xg $rsp
si
ni
ni
ropsearch "pop rdx; ret;" libc
ropsearch "pop rdx;" libc
run < payl
ni
x/30xg $rsp
si
code
si
run < payl
ni
si
run < payl
run < payl
run < payl
info rop
file rop
run < payl
run < payl
run < payl
run < payl
run < payl
run < payl
run < payl
file rop
b func
run < payl
ni
x/30x $rsp
x/30xg $rsp
&buffer
p &buffer
p execve
asmsearch "pop rdi; ret; 
asmsearch "pop rdi; ret;"  libc
file rop
b func
run < payl
ni
p &buffer
p execve
asmsearch "pop rdi; ret;"
asmsearch "pop rdi; ret;" libc
asmsearch "pop rsi; ret;" libc
asmsearch "pop rdx; pop ?; ret;" libc
ropsearch "pop rdx;"
ropsearch "pop rdx;" libc
ni
si
file rop
break func
run
p &buffer
p execve
x/x $rbp
x/30x $rsp
p $rbp
x $rbp
asmsearch "pop rdi; ret;"
asmsearch "pop rdi; ret;" libc
run < payl
ni
ni
ni
ni
si
d 1
run < payl
run < payl
run < payl
run < payl
run < payl
run < payl
run < payl
file rop.c 
file rop
disass main
b func
run
ropsearch "pop edi;"
ropsearch "pop edi;" libc
ropsearch "pop rdi;" libc
ropsearch "pop rsi;" libc
ropsearch "pop rdx;" libc
ni
ni
ni
x/xb &buffer
x/xb buffer
p buffer
p &buffer
x/xb &buffer
p execve
file rop
break func
run < payl
ni
file rop
break func
run
ni
x/30x $rsp
x/x rbp
x/x $rbp
disass main
p &buffer
ropsearch "pop rdi;" libc
ropsearch "pop rsi;" libc
ropsearch "pop rdx;" libc
p execve
file rop
b func
run < payl
si
x/30x $rsp
ni
run < payl
ni
x/30x $rsp
x/30xg $rsp
p &buffer
ni
file rop
run < payl
run < payl
ls
ls
file rop
run < payl
run
run
file rop
break func
run
ni
ni
ni
x/30xg $rsp
p &buffer
p execve
ropsearch "pop rdi;"
ropsearch "pop rdi;" libc
ropsearch "pop rsi;" libc
ropsearch "pop rdx;" libc
run < payl
ni
file rop
run < payl
set logging off
run < payl
run < payl
run < payl
run < payl
run < payl
file rop
run < payl
run
run
run
run
run < payl
run
run
run < payl
file rop
run < payl
run < payl
run
run
run
run
run
run < payl
file rop
disass dup2
b func
run < payl
p &dup2
disass dup2

break func
run < payl2

ni
ni
file rop
break func
run < payl2
ni
file rop
break func
run < payl2
ni
file rop
break func
run < payl2
ni
run
file rop
b
i b
run < payl2
file rop
b func
run < payl2
run < payl2
ni
file rop
b func
run < payl2
ni
si
si
disass main
p &n
set variable n = 11
disass main
p &n
x/xg &n
set variable n = 10
b func
c
ni
p &buffer
ropsearch "pop rdi;" libc
ropsearch "pop rsi;" libc
ropsearch "pop rdx;" libc
p &execve
p &dup2
break func
b func
set variable n=11
continue
ni
p &buffer
